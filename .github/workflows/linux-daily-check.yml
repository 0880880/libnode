name: Linux

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
        include:
          - arch: arm64
            is_arm: true
    container:
      image: quay.io/pypa/manylinux_2_28_${{ matrix.arch == 'amd64' && 'x86_64' || 'aarch64' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          save-always: true
          key: ${{ github.workflow }}-${{ matrix.arch }}-${{ hashFiles('**/version.txt') }}
          restore-keys: |
            ${{ github.workflow }}-${{ matrix.arch }}-${{ hashFiles('**/version.txt') }}
            ${{ github.workflow }}-${{ matrix.arch }}-

      - name: Install building tools
        run: |
          # Install Node.js
          curl -sL https://rpm.nodesource.com/setup_21.x | bash -
          dnf install -y nodejs git python3 python3-pip gcc gcc-c++ make nasm ccache

          # For cross-compiling to ARM64 if we're on x86_64
          if [ "${{ matrix.arch }}" = "arm64" ] && [ "$(uname -m)" = "x86_64" ]; then
            dnf install -y gcc-aarch64-linux-gnu gcc-c++-aarch64-linux-gnu binutils-aarch64-linux-gnu
          fi

      - name: Run the script
        env:
          ARCH: ${{ matrix.arch }}
          CC: "${{ matrix.is_arm && 'aarch64-linux-gnu-gcc' || 'gcc' }}"
          CXX: "${{ matrix.is_arm && 'aarch64-linux-gnu-g++' || 'g++' }}"
          CFLAGS: "-O2 -fPIC"
          CXXFLAGS: "-O2 -fPIC -std=c++20"
          LDFLAGS: "-Wl,--as-needed"
        run: |
          export CCACHE_COMPRESS="true"
          export CCACHE_BASEDIR="$GITHUB_WORKSPACE"
          export CCACHE_DIR="$CCACHE_BASEDIR/.ccache"
          export PATH="/usr/lib64/ccache:/usr/lib/ccache:$PATH"
          mkdir -p "$CCACHE_DIR"

          node index.js

      - name: Create archive
        run: |
          cd node/out/Release
          ln -sf libnode.so.* libnode.so
          tar -cJf "libnode-${{ matrix.arch }}-linux.tar.xz" libnode.* node

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: node/out/Release/libnode-${{ matrix.arch }}-linux.tar.xz
